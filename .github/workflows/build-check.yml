name: Build Check

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-ubuntu:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Ubuntu 18.04",
              os: ubuntu-18.04,
              options: { ZEAL_PORTABLE_BUILD: "OFF" },
            }
          - {
              name: "Ubuntu 18.04, Portable",
              os: ubuntu-18.04,
              options: { ZEAL_PORTABLE_BUILD: "ON" },
            }

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo apt-get -y -qq update
          sudo apt-get -y -qq --no-install-recommends install \
            cmake \
            extra-cmake-modules \
            libarchive-dev \
            libqt5x11extras5-dev \
            libsqlite3-dev \
            libxcb-keysyms1-dev \
            qt5-default \
            qtwebengine5-dev

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake -DZEAL_PORTABLE_BUILD="${{ matrix.config.options.ZEAL_PORTABLE_BUILD }}" ..

      - name: Build
        run: cmake --build build

  build-windows:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows Server 2019",
              os: windows-2019,
              options: { ZEAL_PORTABLE_BUILD: "OFF" },
            }
          - {
              name: "Windows Server 2019, Portable",
              os: windows-2019,
              options: { ZEAL_PORTABLE_BUILD: "ON" },
            }

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare vcpkg
        uses: lukka/run-vcpkg@v2
        id: runvcpkg
        with:
          vcpkgArguments: libarchive[core] openssl sqlite3
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgGitCommitId: 0ab1a9e1c64a3968631b59647e771beda7d1f256
          vcpkgTriplet: x64-windows

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ${{ runner.workspace }}/Qt/
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          arch: win64_msvc2017_64
          modules: qtwebengine
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          extra: --external 7z

      - name: Print Environment
        run: gci env:* | sort-object name

      - name: Configure & Build
        uses: lukka/run-cmake@v2
        with:
          buildDirectory: ${{ runner.workspace }}/build/
          cmakeAppendedArgs: -GNinja -DZEAL_PORTABLE_BUILD=${{ matrix.config.options.ZEAL_PORTABLE_BUILD }}
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          useVcpkgToolchainFile: true

  appimage:
    name: AppImage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build AppImage
        uses: ./.github/workflows/appimage/
        with:
          recipe: pkg/appimage/appimage-amd64.yml
          apt_dependencies: >-
            build-essential
            cmake extra-cmake-modules
            libappindicator-dev
            libarchive-dev
            libqt5x11extras5-dev
            libsqlite3-dev
            libxcb-keysyms1-dev
            ninja-build
            qtbase5-dev
            qtwebengine5-dev

      - name: Upload AppImage
        uses: actions/upload-artifact@v2-preview
        with:
          name: zeal-dev-x86_64.AppImage # TODO: Provide real version.
          path: zeal-*.AppImage

      # TODO: Enable for releases.
      - name: Upload AppImage.zsync
        uses: actions/upload-artifact@v2-preview
        if: github.event_name == 'create' && github.event.ref_type == 'tag' && startsWith(github.ref, 'v')
        with:
          name: zeal-dev-x86_64.AppImage.zsync
          path: zeal-*.AppImage.zsync
